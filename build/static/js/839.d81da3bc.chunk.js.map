{"version":3,"file":"static/js/839.d81da3bc.chunk.js","mappings":"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","sources":["modal/index.tsx","../DD_REACT/webpack/universalModuleDefinition","../DD_REACT/src/index.ts","../DD_REACT/src/use-context.ts","../DD_REACT/src/use-custom-widget-option-boolean.ts","../DD_REACT/src/use-custom-widget-option-string.ts","../DD_REACT/src/use-custom-widget-option.ts","../DD_REACT/src/use-template-variable.ts","../DD_REACT/external umd \"@datadog/ui-extensions-sdk\"","../DD_REACT/external umd \"react\"","../DD_REACT/webpack/bootstrap","../DD_REACT/webpack/startup","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js"],"sourcesContent":["import { useContext } from '@datadog/ui-extensions-react';\nimport { init } from '@datadog/ui-extensions-sdk';\nimport { useState } from 'react';\nimport './../index.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst client = init();\n\nfunction Modal() {\n    const [clickCount, setClickCount] = useState(0);\n    const context = useContext(client);\n    const args = context?.args;\n\n    const onClick = () => {\n        setClickCount(clickCount + 1);\n\n        client.events.broadcast('modal_button_click', clickCount + 1);\n    };\n\n    return (\n        <div\n            style={{\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center',\n                justifyContent: 'center'\n            }}\n        >\n            <p>\n                This modal was opened programatically from the main app\n                controller with these args\n            </p>\n            <blockquote style={{ backgroundColor: '#333', color: '#fff' }}>\n                <p>\n                    <em>{JSON.stringify(args)}</em>\n                </p>\n            </blockquote>\n            <button\n                style={{\n                    border: 'none',\n                    background: 'red',\n                    width: 400,\n                    height: 200\n                }}\n                onClick={onClick}\n            >\n                Click the big red button!\n            </button>\n        </div>\n    );\n}\n\nexport default function render() {\n    ReactDOM.render(\n        <React.StrictMode>{<Modal />}</React.StrictMode>,\n        document.getElementById('root')\n    );\n}\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@datadog/ui-extensions-sdk\"), require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"@datadog/ui-extensions-sdk\", \"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"DD_REACT\"] = factory(require(\"@datadog/ui-extensions-sdk\"), require(\"react\"));\n\telse\n\t\troot[\"DD_REACT\"] = factory(root[\"@datadog/ui-extensions-sdk\"], root[\"react\"]);\n})(self, function(__WEBPACK_EXTERNAL_MODULE__669__, __WEBPACK_EXTERNAL_MODULE__156__) {\nreturn ","export * from './use-context';\nexport * from './use-custom-widget-option';\nexport * from './use-custom-widget-option-boolean';\nexport * from './use-custom-widget-option-string';\nexport * from './use-template-variable';\n","import * as uiExtensionsSDK from '@datadog/ui-extensions-sdk';\nimport * as React from 'react';\n\n/**\n * This represents the different states the {@link uiExtensionsSDK.Context} can be in.\n */\ntype Context =\n    | ContextHandshakeFailure\n    | ContextInitialized\n    | ContextInitializing;\n\n/**\n * There was some kind of failure with the handshake.\n * There's no useful {@link uiExtensionsSDK.Context}, but there is an error.\n */\ntype ContextHandshakeFailure = { type: 'handshake failure'; error: unknown };\n\n/**\n * The handshake is still being preformed.\n * There's no useful {@link uiExtensionsSDK.Context} yet.\n */\ntype ContextInitializing = { type: 'initializing' };\n\n/**\n * The handshake has succeeded and there is a {@link uiExtensionsSDK.Context} that can be used.\n */\ntype ContextInitialized = {\n    type: 'initialized';\n    context: uiExtensionsSDK.Context;\n};\n\n/**\n * Returns a {@link uiExtensionsSDK.Context}.\n * Will be updated whenever the {@link uiExtensionsSDK.Context} changes.\n *\n * This hook abstracts away the intricacies of keeping the {@link uiExtensionsSDK.Context} up to date.\n *\n * @param client An initialized {@link uiExtensionsSDK.DDClient}.\n * This should be the result of invoking {@link uiExtensionsSDK.init}.\n * @returns The {@link uiExtensionsSDK.Context}, if it exists.\n *\n * @example\n * This can be used like:\n * ```TypeScript\n * import * as uiExtensionsReact from '@datadog/ui-extensions-react';\n * import * as uiExtensionsSDK from '@datadog/ui-extensions-sdk';\n * import * as React from 'react';\n *\n * const client = uiExtensionsSDK.init();\n *\n * const Widget: React.FunctionComponent = () => {\n *      const context = uiExtensionsReact.useContext(client)\n *      if (context == null) {\n *          return <p>Initializing</p>;\n *      }\n *\n *      const colorTheme: uiExtensionsSDK.ColorTheme = context.app.currentUser.colorTheme;\n *      return <p>Widget is ready! Color theme: {colorTheme}</p>;\n * }\n * ```\n */\nfunction useContext(\n    client: uiExtensionsSDK.DDClient\n): uiExtensionsSDK.Context | undefined {\n    const result = useContextImplementation(client);\n    switch (result.type) {\n        case 'handshake failure':\n            return undefined;\n\n        case 'initialized':\n            return result.context;\n\n        case 'initializing':\n            return undefined;\n    }\n}\n\n/**\n * The low-level implementation of the {@link useContext} hook.\n * This only exists to make it a bit clearer to understand how we deal with the different states.\n *\n * @param client An initialized {@link uiExtensionsSDK.DDClient}.\n * This should be the result of invoking {@link uiExtensionsSDK.init}.\n * @returns The state of the {@link uiExtensionsSDK.Context}.\n */\nfunction useContextImplementation(client: uiExtensionsSDK.DDClient): Context {\n    const [context, setContext] = React.useState<Context>({\n        type: 'initializing'\n    });\n\n    React.useEffect(() => {\n        // Since we're dealing with promises,\n        // we need some way to track whether or not to make a state change.\n        // We keep track of whether or not we're still mounted.\n        let unMounted: boolean = false;\n\n        client\n            .getContext()\n            .then((newContext: uiExtensionsSDK.Context): void => {\n                if (unMounted) {\n                    return;\n                }\n\n                setContext({ type: 'initialized', context: newContext });\n            })\n            .catch((error: unknown): void => {\n                if (unMounted) {\n                    return;\n                }\n\n                setContext({ type: 'handshake failure', error });\n            });\n\n        const unsubscribeContextChange = client.events.on(\n            uiExtensionsSDK.EventType.CONTEXT_CHANGE,\n            (newContext: uiExtensionsSDK.Context): void => {\n                setContext({ type: 'initialized', context: newContext });\n            }\n        );\n\n        return () => {\n            // We flip the flag to let any in-flight promises know we're unmounted.\n            unMounted = true;\n            unsubscribeContextChange();\n        };\n    }, [client]);\n\n    return context;\n}\n\nexport { useContext };\n","import * as uiExtensionsSDK from '@datadog/ui-extensions-sdk';\n\nimport { useCustomWidgetOption } from './use-custom-widget-option';\n\n/**\n * Returns the current value of a single custom widget option that is expected to be a {@link boolean}.\n * This will be updated whenever the options change.\n *\n * This hook abstracts away the intricacies of keeping up to date with an option.\n *\n * @param client An initialized {@link uiExtensionsSDK.DDClient}. This should be the result of invoking {@link uiExtensionsSDK.init}.\n * @param optionName The option name to look for.\n * @returns The option value (if it exists).\n *\n * @example\n * This hook can be used like:\n * ```TypeScript\n * import * as uiExtensionsReact from '@datadog/ui-extensions-react';\n * import * as uiExtensionsSDK from '@datadog/ui-extensions-sdk';\n * import * as React from 'react';\n *\n * const client = uiExtensionsSDK.init();\n *\n * const CustomWidget: React.FunctionComponent = () => {\n *     const verbose = uiExtensionsReact.useCustomWidgetOptionBoolean(client, 'verbose');\n *\n *     if (verbose == null) {\n *         return <p>Please decide on verbosity</p>;\n *     } else {\n *         return <p>Verbose: {verbose}</p>;\n *     }\n * }\n * ```\n */\nfunction useCustomWidgetOptionBoolean(\n    client: uiExtensionsSDK.DDClient,\n    optionName: string\n): boolean | undefined {\n    const option: boolean | undefined = useCustomWidgetOption(\n        client,\n        optionName,\n        (newOption: string | boolean): boolean | undefined => {\n            if (typeof newOption !== 'boolean') {\n                return;\n            }\n\n            return newOption;\n        }\n    );\n\n    return option;\n}\n\nexport { useCustomWidgetOptionBoolean };\n","import * as uiExtensionsSDK from '@datadog/ui-extensions-sdk';\n\nimport { useCustomWidgetOption } from './use-custom-widget-option';\n\n/**\n * Returns the current value of a single custom widget option that is expected to be a {@link string}.\n * This will be updated whenever the options change.\n *\n * This hook abstracts away the intricacies of keeping up to date with an option.\n *\n * @param client An initialized {@link uiExtensionsSDK.DDClient}. This should be the result of invoking {@link uiExtensionsSDK.init}.\n * @param optionName The option name to look for.\n * @returns The option value (if it exists).\n *\n * @example\n * This hook can be used like:\n * ```TypeScript\n * import * as uiExtensionsReact from '@datadog/ui-extensions-react';\n * import * as uiExtensionsSDK from '@datadog/ui-extensions-sdk';\n * import * as React from 'react';\n *\n * const client = uiExtensionsSDK.init();\n *\n * const CustomWidget: React.FunctionComponent = () => {\n *     const query = uiExtensionsReact.useCustomWidgetOptionString(client, 'query');\n *\n *     if (query == null) {\n *         return <p>Please set a query</p>;\n *     } else {\n *         return <p>Query: {query}</p>;\n *     }\n * }\n * ```\n */\nfunction useCustomWidgetOptionString(\n    client: uiExtensionsSDK.DDClient,\n    optionName: string\n): string | undefined {\n    const option: string | undefined = useCustomWidgetOption(\n        client,\n        optionName,\n        (newOption: string | boolean): string | undefined => {\n            if (typeof newOption !== 'string') {\n                return;\n            }\n\n            return newOption;\n        }\n    );\n\n    return option;\n}\n\nexport { useCustomWidgetOptionString };\n","import * as uiExtensionsSDK from '@datadog/ui-extensions-sdk';\nimport * as React from 'react';\n\nimport * as useContext from './use-context';\n\n/**\n * Returns the current value of a single custom widget option.\n * This will be updated whenever the options change.\n *\n * This hook abstracts away the intricacies of keeping options up to date.\n *\n * @param client An initialized {@link uiExtensionsSDK.DDClient}. This should be the result of invoking {@link uiExtensionsSDK.init}.\n * @param optionName The option name to look for.\n * @param parser A function for parsing the option value.\n * @returns The option value (if it exists).\n *\n * @example\n * This hook can be used like:\n * ```TypeScript\n * import * as uiExtensionsReact from '@datadog/ui-extensions-react';\n * import * as uiExtensionsSDK from '@datadog/ui-extensions-sdk';\n * import * as React from 'react';\n *\n * const client = uiExtensionsSDK.init();\n *\n * const parseInt = (option: string | boolean): number | undefined => {\n *     if (typeof option !== 'string') {\n *         return;\n *     }\n *\n *     const parsed: number = Number.parseInt(option);\n *     if (Number.isNaN(parsed)) {\n *         return;\n *     }\n *\n *     return parsed;\n * };\n *\n * const CustomWidget: React.FunctionComponent = () => {\n *     const threshold = uiExtensionsReact.useCustomWidgetOption(client, 'threshold', parseInt);\n *\n *     if (threshold == null) {\n *         return <p>Please set a threshold</p>;\n *     } else {\n *         return <p>Threshold: {threshold}</p>;\n *     }\n * }\n * ```\n */\nfunction useCustomWidgetOption<Result>(\n    client: uiExtensionsSDK.DDClient,\n    optionName: string,\n    parser: (option: string | boolean) => Result | undefined\n): Result | undefined {\n    const context = useContext.useContext(client);\n    const [option, setOption] = React.useState<Result>();\n\n    React.useEffect(() => {\n        if (context == null) {\n            return;\n        }\n\n        const initialOption: string | boolean | undefined =\n            context.widget?.definition.options?.[optionName];\n        if (initialOption == null) {\n            setOption(undefined);\n            return;\n        }\n\n        const parsed = parser(initialOption);\n        setOption(parsed);\n    }, [context, context?.widget?.definition.options, optionName, parser]);\n\n    return option;\n}\n\nexport { useCustomWidgetOption };\n","import * as uiExtensionsSDK from '@datadog/ui-extensions-sdk';\nimport * as React from 'react';\n\nimport * as useContext from './use-context';\n\nfunction findTemplateVariableValue(\n    variableName: string,\n    templateVariables: uiExtensionsSDK.TemplateVariableValue[]\n): string | undefined {\n    const templateVariable = templateVariables.find(\n        (value: uiExtensionsSDK.TemplateVariableValue): boolean => {\n            return value.name === variableName;\n        }\n    );\n\n    if (templateVariable?.value == null) {\n        return;\n    }\n\n    return templateVariable.value;\n}\n\n/**\n * Returns the current value of a specific template variable.\n * This will be updated whenever the template variable changes.\n *\n * This hook abstracts away the intricacies of keeping template variables up to date.\n *\n * @param client An initialized {@link uiExtensionsSDK.DDClient}. This should be the result of invoking {@link uiExtensionsSDK.init}.\n * @param variableName The name of the template variable to get the value of.\n * @returns The value of the template variable if it exists.\n *\n * @example\n * This hook can be used like:\n * ```TypeScript\n * import * as uiExtensionsReact from '@datadog/ui-extensions-react';\n * import * as uiExtensionsSDK from '@datadog/ui-extensions-sdk';\n * import * as React from 'react';\n *\n * const client = uiExtensionsSDK.init();\n *\n * const CustomWidget: React.FunctionComponent = () => {\n *     const service = uiExtensionsReact.useTemplateVariable(client, 'service');\n *\n *     if (service == null) {\n *         return <p>Please select a service from the template variables.</p>;\n *     }\n *\n *     return <p>Service: {service}.</p>;\n * }\n * ```\n */\nfunction useTemplateVariable(\n    client: uiExtensionsSDK.DDClient,\n    variableName: string\n): string | undefined {\n    const context = useContext.useContext(client);\n    const [variable, setVariable] = React.useState<string | undefined>();\n\n    React.useEffect(() => {\n        const templateVariables = context?.dashboard?.templateVars ?? [];\n        const value = findTemplateVariableValue(\n            variableName,\n            templateVariables\n        );\n        if (value == null) {\n            return;\n        }\n\n        setVariable(value);\n    }, [context?.dashboard?.templateVars, variableName]);\n\n    return variable;\n}\n\nexport { useTemplateVariable };\n","module.exports = __WEBPACK_EXTERNAL_MODULE__669__;","module.exports = __WEBPACK_EXTERNAL_MODULE__156__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(920);\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["client","init","Modal","useState","clickCount","setClickCount","context","useContext","args","style","display","flexDirection","alignItems","justifyContent","backgroundColor","color","JSON","stringify","border","background","width","height","onClick","events","broadcast","render","ReactDOM","document","getElementById","__WEBPACK_EXTERNAL_MODULE__669__","__WEBPACK_EXTERNAL_MODULE__156__","self","module","exports","require","o","a","t","result","React","type","setContext","useEffect","unMounted","getContext","then","newContext","catch","error","e","unsubscribeContextChange","on","uiExtensionsSDK","EventType","CONTEXT_CHANGE","useContextImplementation","i","optionName","useCustomWidgetOption","newOption","parser","r","option","setOption","initialOption","widget","definition","options","parsed","undefined","variableName","variable","setVariable","templateVariables","n","dashboard","templateVars","value","templateVariable","find","name","findTemplateVariableValue","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","call","_arrayLikeToArray","arr","len","length","arr2","Array","_slicedToArray","isArray","_i","Symbol","iterator","_s","_e","_arr","_n","_d","next","done","push","err","minLen","Object","prototype","toString","slice","constructor","from","test","TypeError"],"sourceRoot":""}