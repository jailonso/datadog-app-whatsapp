import type { ApiRequestOptions, RequestClient } from '../types';
export declare class DDAPIClient {
    private readonly client;
    constructor(client: RequestClient);
    request<Q = any, R = any>(resource: string, { method, params, data, contentType }: ApiRequestOptions<Q>): Promise<R>;
    get<R = any>(resource: string, options?: Omit<ApiRequestOptions<undefined>, 'method' | 'data' | 'contentType'>): Promise<R>;
    post<Q = any, R = any>(resource: string, data: Q, options?: Omit<ApiRequestOptions<Q>, 'method' | 'data'>): Promise<R>;
    put<Q = any, R = any>(resource: string, data: Q, options?: Omit<ApiRequestOptions<Q>, 'method' | 'data'>): Promise<R>;
    patch<Q = any, R = any>(resource: string, data: Q, options?: Omit<ApiRequestOptions<Q>, 'method' | 'data'>): Promise<R>;
    delete<R = any>(resource: string, options?: Omit<ApiRequestOptions<undefined>, 'method' | 'data' | 'contentType'>): Promise<R>;
    clearCredentials(): Promise<unknown>;
}
