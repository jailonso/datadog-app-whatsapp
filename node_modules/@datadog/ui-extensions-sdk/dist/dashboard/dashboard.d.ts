import type { ContextClient, LoggerClient, RequestClient, Timeframe } from '../types';
import { DDDashboardCogMenuClient } from './dashboard-cog-menu/dashboard-cog-menu';
import { DDDashboardCustomWidgetClient } from './dashboard-custom-widget/dashboard-custom-widget';
export declare class DDDashboardClient {
    private readonly client;
    cogMenu: DDDashboardCogMenuClient;
    customWidget: DDDashboardCustomWidgetClient;
    constructor(client: ContextClient & LoggerClient & RequestClient);
    setCursor({ timestamp }: SetDashboardCursorRequest): Promise<unknown>;
    setTimeframe({ timeframe }: SetDashboardTimeframeRequest): Promise<unknown>;
}
interface SetDashboardTimeframeRequest {
    timeframe: Timeframe;
}
interface SetDashboardCursorRequest {
    timestamp: number | null;
}
export {};
