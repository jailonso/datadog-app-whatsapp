import type { FeatureType, RequestType } from '../constants';
import { Context, ContextClient, LoggerClient, RequestClient, RequestHandler } from '../types';
export declare class DDFeatureClient {
    private readonly client;
    protected readonly featureType: FeatureType;
    constructor(client: ContextClient & LoggerClient & RequestClient, featureType: FeatureType);
    protected getContext(): Promise<Context>;
    protected handleRequest<Q = unknown, R = unknown>(requestType: RequestType, requestHandler: RequestHandler<Q, R | Promise<R>>): () => void;
    protected logError(message: string): void;
    protected sendRequest<Q = unknown, R = unknown>(requestType: RequestType, requestData?: Q): Promise<R>;
    private isEnabled;
    private validateFeatureIsEnabled;
}
