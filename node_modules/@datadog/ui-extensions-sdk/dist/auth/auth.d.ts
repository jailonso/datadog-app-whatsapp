import { AuthState, AuthStateOptions, ContextClient, LoggerClient, RequestClient } from '../types';
export declare class DDAuthClient<AuthStateArgs = unknown> {
    private readonly client;
    readonly options?: AuthStateOptions<AuthStateArgs>;
    constructor(client: ContextClient & LoggerClient & RequestClient, options?: AuthStateOptions<AuthStateArgs>);
    private checkAuthState;
    getAuthState(): Promise<AuthState<AuthStateArgs>>;
    updateAuthState(): Promise<unknown>;
}
export declare const resolveAuthFlow: <AuthStateArgs>(state: AuthState<AuthStateArgs>) => void;
